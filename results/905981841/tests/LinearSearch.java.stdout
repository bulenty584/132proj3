func Main()
  y0 = 0
  z0 = 12
  z1 = alloc(z0)
  z2 = 16
  vmt_LS = alloc(z2)
  z3 = @LS_Print
  [vmt_LS + 0] = z3
  z4 = @LS_Init
  [vmt_LS + 4] = z4
  z5 = @LS_Start
  [vmt_LS + 8] = z5
  z6 = @LS_Search
  [vmt_LS + 12] = z6
  [z1 + 0] = vmt_LS
  if0 z1 goto z1Error_0
  goto z1End_1
z1Error_0:
  error("null pointer")
z1End_1:
  if0 z1 goto z1Error_2
  goto z1End_3
z1Error_2:
  error("null pointer")
z1End_3:
  z7 = 10
  z8 = [z1 + 0]
  z9 = [z8 + 8]
  z10 = call z9(z1 z7)
  print(z10)
  return y0
func LS_Start(this sz)
  if0 this goto thisError_4
  goto thisEnd_5
thisError_4:
  error("null pointer")
thisEnd_5:
  z11 = [this + 0]
  z12 = [z11 + 4]
  z13 = call z12(this sz)
  aux01 = z13
  if0 this goto thisError_6
  goto thisEnd_7
thisError_6:
  error("null pointer")
thisEnd_7:
  z14 = [this + 0]
  z15 = [z14 + 0]
  z16 = call z15(this)
  aux02 = z16
  z17 = 9999
  print(z17)
  if0 this goto thisError_8
  goto thisEnd_9
thisError_8:
  error("null pointer")
thisEnd_9:
  z18 = 8
  z19 = [this + 0]
  z20 = [z19 + 12]
  z21 = call z20(this z18)
  print(z21)
  if0 this goto thisError_10
  goto thisEnd_11
thisError_10:
  error("null pointer")
thisEnd_11:
  z22 = 12
  z23 = [this + 0]
  z24 = [z23 + 12]
  z25 = call z24(this z22)
  print(z25)
  if0 this goto thisError_12
  goto thisEnd_13
thisError_12:
  error("null pointer")
thisEnd_13:
  z26 = 17
  z27 = [this + 0]
  z28 = [z27 + 12]
  z29 = call z28(this z26)
  print(z29)
  if0 this goto thisError_14
  goto thisEnd_15
thisError_14:
  error("null pointer")
thisEnd_15:
  z30 = 50
  z31 = [this + 0]
  z32 = [z31 + 12]
  z33 = call z32(this z30)
  print(z33)
  z34 = 55
  return z34
func LS_Print(this)
  z35 = 1
  j = z35
  whileStart_16:
  z36 = [this + 8]
  z37 = j < z36
  if0 z37 goto whileEnd_18
  whileBody_17:
    z38 = [this + 4]
    z39 = [z38 + 0]
    z40 = 4
    z41 = 1
    z42 = 0
    z43 = z42 - z41
    z44 = z43 < j
    z45 = j < z39
    z46 = z44 * z45
    if0 z46 goto z46Error_19
    goto z46End_20
z46Error_19:
  error("array index out of bounds")
z46End_20:
  z47 = j * z40
  z48 = z47 + z40
  z49 = z38 + z48
  z50 = [z49 + 0]
  print(z50)
  z51 = 1
  z52 = j + z51
  j = z52
  goto whileStart_16
  whileEnd_18:
    z53 = 0
    return z53
func LS_Search(this num)
  z54 = 1
  j = z54
  z55 = 0
  ls01 = z55
  z56 = 0
  ifound = z56
  whileStart_21:
  z57 = [this + 8]
  z58 = j < z57
  if0 z58 goto whileEnd_23
  whileBody_22:
    z59 = [this + 4]
    z60 = [z59 + 0]
    z61 = 4
    z62 = 1
    z63 = 0
    z64 = z63 - z62
    z65 = z64 < j
    z66 = j < z60
    z67 = z65 * z66
    if0 z67 goto z67Error_24
    goto z67End_25
z67Error_24:
  error("array index out of bounds")
z67End_25:
  z68 = j * z61
  z69 = z68 + z61
  z70 = z59 + z69
  z71 = [z70 + 0]
  aux01 = z71
  z72 = 1
  z73 = num + z72
  aux02 = z73
  z74 = aux01 < num
  if0 z74 goto else_26
  z75 = 0
  nt = z75
  goto ifend_27
  else_26:
  z76 = aux01 < aux02
  z78 = 1
  z77 = z78
  z79 = z77 - z76
  if0 z79 goto else_28
  z80 = 0
  nt = z80
  goto ifend_29
  else_28:
  z81 = 1
  ls01 = z81
  z82 = 1
  ifound = z82
  z83 = [this + 8]
  j = z83
  ifend_29:
  ifend_27:
  z84 = 1
  z85 = j + z84
  j = z85
  goto whileStart_21
  whileEnd_23:
    return ifound
func LS_Init(this sz)
  [this + 8] = sz
  z87 = 1
  z86 = sz + z87
  z89 = 4
  z88 = z86 * z89
  z90 = alloc(z88)
  if0 z90 goto z90Error_30
  goto z90End_31
z90Error_30:
  error("null pointer")
z90End_31:
  [z90 + 0] = sz
  [this + 4] = z90
  z91 = 1
  j = z91
  z92 = [this + 8]
  z93 = 1
  z94 = z92 + z93
  k = z94
  whileStart_32:
  z95 = [this + 8]
  z96 = j < z95
  if0 z96 goto whileEnd_34
  whileBody_33:
    z97 = 2
    z98 = z97 * j
    aux01 = z98
    z99 = 3
    z100 = k - z99
    aux02 = z100
    z101 = [this + 4]
    z102 = aux01 + aux02
    z103 = [z101 + 0]
    z104 = 0
    z105 = 1
    z106 = z104 - z105
    z107 = j < z103
    z108 = z106 * z107
    if0 z108 goto z108Error_35
    goto z108End_36
z108Error_35:
  error("array index out of bounds")
z108End_36:
  z109 = 4
  z110 = j * z109
  z111 = z110 + z109
  z112 = z101 + z111
  [z112 + 0] = z102
  z113 = 1
  z114 = j + z113
  j = z114
  z115 = 1
  z116 = k - z115
  k = z116
  goto whileStart_32
  whileEnd_34:
    z117 = 0
    return z117
