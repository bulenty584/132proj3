func Main()
  y0 = 0
  v0 = 12
  v1 = alloc(v0)
  v2 = 16
  vmt_LS = alloc(v2)
  v3 = @LS_Print
  [vmt_LS + 0] = v3
  v4 = @LS_Init
  [vmt_LS + 4] = v4
  v5 = @LS_Start
  [vmt_LS + 8] = v5
  v6 = @LS_Search
  [vmt_LS + 12] = v6
  [v1 + 0] = vmt_LS
  if0 v1 goto v1Error_0
  goto v1End_1
v1Error_0:
  error("null pointer")
v1End_1:
  if0 v1 goto v1Error_2
  goto v1End_3
v1Error_2:
  error("null pointer")
v1End_3:
  v7 = 10
  v8 = [v1 + 0]
  v9 = [v8 + 8]
  v10 = call v9(v1 v7)
  print(v10)
  return y0
func LS_Start(this sz)
  if0 this goto thisError_4
  goto thisEnd_5
thisError_4:
  error("null pointer")
thisEnd_5:
  v11 = [this + 0]
  v12 = [v11 + 4]
  v13 = call v12(this sz)
  aux01 = v13
  if0 this goto thisError_6
  goto thisEnd_7
thisError_6:
  error("null pointer")
thisEnd_7:
  v14 = [this + 0]
  v15 = [v14 + 0]
  v16 = call v15(this)
  aux02 = v16
  v17 = 9999
  print(v17)
  if0 this goto thisError_8
  goto thisEnd_9
thisError_8:
  error("null pointer")
thisEnd_9:
  v18 = 8
  v19 = [this + 0]
  v20 = [v19 + 12]
  v21 = call v20(this v18)
  print(v21)
  if0 this goto thisError_10
  goto thisEnd_11
thisError_10:
  error("null pointer")
thisEnd_11:
  v22 = 12
  v23 = [this + 0]
  v24 = [v23 + 12]
  v25 = call v24(this v22)
  print(v25)
  if0 this goto thisError_12
  goto thisEnd_13
thisError_12:
  error("null pointer")
thisEnd_13:
  v26 = 17
  v27 = [this + 0]
  v28 = [v27 + 12]
  v29 = call v28(this v26)
  print(v29)
  if0 this goto thisError_14
  goto thisEnd_15
thisError_14:
  error("null pointer")
thisEnd_15:
  v30 = 50
  v31 = [this + 0]
  v32 = [v31 + 12]
  v33 = call v32(this v30)
  print(v33)
  v34 = 55
  return v34
func LS_Print(this)
  v35 = 1
  j = v35
  whileStart_16:
  v36 = [this + 8]
  v37 = j < v36
  if0 v37 goto whileEnd_18
  whileBody_17:
    v38 = [this + 4]
    v39 = [v38 + 0]
    v40 = 4
    v41 = 1
    v42 = 0
    v43 = v42 - v41
    v44 = v43 < j
    v45 = j < v39
    v46 = v44 * v45
    if0 v46 goto v46Error_19
    goto v46End_20
v46Error_19:
  error("array index out of bounds")
v46End_20:
  v47 = j * v40
  v48 = v47 + v40
  v49 = v38 + v48
  v50 = [v49 + 0]
  print(v50)
  v51 = 1
  v52 = j + v51
  j = v52
  goto whileStart_16
  whileEnd_18:
    v53 = 0
    return v53
func LS_Search(this num)
  v54 = 1
  j = v54
  v55 = 0
  ls01 = v55
  v56 = 0
  ifound = v56
  whileStart_21:
  v57 = [this + 8]
  v58 = j < v57
  if0 v58 goto whileEnd_23
  whileBody_22:
    v59 = [this + 4]
    v60 = [v59 + 0]
    v61 = 4
    v62 = 1
    v63 = 0
    v64 = v63 - v62
    v65 = v64 < j
    v66 = j < v60
    v67 = v65 * v66
    if0 v67 goto v67Error_24
    goto v67End_25
v67Error_24:
  error("array index out of bounds")
v67End_25:
  v68 = j * v61
  v69 = v68 + v61
  v70 = v59 + v69
  v71 = [v70 + 0]
  aux01 = v71
  v72 = 1
  v73 = num + v72
  aux02 = v73
  v74 = aux01 < num
  if0 v74 goto else_26
  v75 = 0
  nt = v75
  goto ifend_27
  else_26:
  v76 = aux01 < aux02
  v78 = 1
  v77 = v78
  v79 = v77 - v76
  if0 v79 goto else_28
  v80 = 0
  nt = v80
  goto ifend_29
  else_28:
  v81 = 1
  ls01 = v81
  v82 = 1
  ifound = v82
  v83 = [this + 8]
  j = v83
  ifend_29:
  ifend_27:
  v84 = 1
  v85 = j + v84
  j = v85
  goto whileStart_21
  whileEnd_23:
    return ifound
func LS_Init(this sz)
  [this + 8] = sz
  v87 = 1
  v86 = sz + v87
  v89 = 4
  v88 = v86 * v89
  v90 = alloc(v88)
  if0 v90 goto v90Error_30
  goto v90End_31
v90Error_30:
  error("null pointer")
v90End_31:
  [v90 + 0] = sz
  [this + 4] = v90
  v91 = 1
  j = v91
  v92 = [this + 8]
  v93 = 1
  v94 = v92 + v93
  k = v94
  whileStart_32:
  v95 = [this + 8]
  v96 = j < v95
  if0 v96 goto whileEnd_34
  whileBody_33:
    v97 = 2
    v98 = v97 * j
    aux01 = v98
    v99 = 3
    v100 = k - v99
    aux02 = v100
    v101 = [this + 4]
    v102 = aux01 + aux02
    v103 = [v101 + 0]
    v104 = 0
    v105 = 1
    v106 = v104 - v105
    v107 = j < v103
    v108 = v106 * v107
    if0 v108 goto v108Error_35
    goto v108End_36
v108Error_35:
  error("array index out of bounds")
v108End_36:
  v109 = 4
  v110 = j * v109
  v111 = v110 + v109
  v112 = v101 + v111
  [v112 + 0] = v102
  v113 = 1
  v114 = j + v113
  j = v114
  v115 = 1
  v116 = k - v115
  k = v116
  goto whileStart_32
  whileEnd_34:
    v117 = 0
    return v117
